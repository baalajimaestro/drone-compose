version: '3'

services:
  drone-server:
    image: drone/drone:latest

    depends_on:
      - drone-postgres
    ports:
      - ${HTTP_BIND:-0.0.0.0}:${HTTP_PORT:-80}:80
      - ${HTTPS_BIND:-0.0.0.0}:${HTTPS_PORT:-443}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/data
    environment:
      - TZ=${TZ}
      - DRONE_USER_FILTER=${DRONE_USER_FILTER}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_GITHUB_SERVER=${DRONE_GITHUB_SERVER}
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_DATABASE_DRIVER=${DRONE_DATABASE_DRIVER}
      - DRONE_DATABASE_DATASOURCE=postgresql://${DATABASE_USER}:${DATABASE_PASS}@${IPV4_NETWORK:-172.18.1}.4:5432/${DATABASE_NAME}?sslmode=disable
      - DRONE_DATABASE_SECRET=${DRONE_DATABASE_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}

    restart: always
    networks:
      drone-network:
        ipv4_address: ${IPV4_NETWORK:-172.18.1}.2
        aliases:
          - drone

  drone-agent:
    image: drone/agent:latest

    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ}
      - DRONE_RPC_SERVER=${DRONE_RPC_SERVER}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_NAME}

    restart: always
    networks:
      drone-network:
        ipv4_address: ${IPV4_NETWORK:-172.18.1}.3
        aliases:
          - agent

  drone-postgres:
    image: postgres:alpine

    volumes:
      - postgres-vol-1:/var/lib/postgres/
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_DB=${DATABASE_NAME}

    restart: always
    networks:
      drone-network:
        ipv4_address: ${IPV4_NETWORK:-172.18.1}.4
        aliases:
          - postgres

networks:
  drone-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${IPV4_NETWORK:-172.18.1}.0/24

volumes:
  postgres-vol-1:

version: '2.1'

services:
  drone-server:
    image: drone/drone:0.8.4

    ports:
      - ${HTTP_BIND:-0.0.0.0}:${HTTP_PORT:-80}:8000
      - 9000
    depends_on:
      - drone-postgres
    volumes:
      - ./data:/var/lib/drone/
    environment:
      - DRONE_OPEN=true
      - DRONE_ORGS=${DRONE_ORGS}
      - DRONE_ADMIN=${DRONE_ADMIN}
      - DRONE_HOST=${DRONE_HOST}
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_DATABASE_DRIVER=mysql
      - DRONE_DATABASE_DATASOURCE=mysql://${DBUSER}:${DBPASS}@tcp(mysql:3306)/${DBNAME}?parseTime=true
      - DRONE_SECRET=${DRONE_SECRET}

    restart: always
    networks:
      drone-network:
        aliases:
          - drone

  drone-agent:
    image: drone/agent:0.8.4

    command: agent
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET=${DRONE_SECRET}

    restart: always
    networks:
      drone-network:
        aliases:
          - agent

  drone-mysql:
    image: mariadb:10.2

    volumes:
      - mysql-vol-1::/var/lib/mysql/
    environment:
      - MYSQL_ROOT_PASSWORD=${DBROOT}
      - MYSQL_DATABASE=${DBNAME}
      - MYSQL_USER=${DBUSER}
      - MYSQL_PASSWORD=${DBPASS}

    restart: always
    networks:
      drone-network:
        aliases:
          - mysql
    

networks:
  drone-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.1.0/24

volumes:
  mysql-vol-1:
